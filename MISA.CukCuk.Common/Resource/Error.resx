<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnUnknownError" xml:space="preserve">
    <value>000</value>
    <comment>Có lỗi xảy ra. Vui lòng liên hệ MISA</comment>
  </data>
  <data name="CategoryCodeNotEmpty" xml:space="preserve">
    <value>012</value>
    <comment>Mã nhóm nguyên vật liệu không được bỏ trống</comment>
  </data>
  <data name="CategoryNameNotEmpty" xml:space="preserve">
    <value>013</value>
    <comment>Tên nhóm nguyên vật liệu không được bỏ trống</comment>
  </data>
  <data name="ConversionUnitIdNotEmpty" xml:space="preserve">
    <value>014</value>
    <comment>Đơn vị tính không được bỏ trống</comment>
  </data>
  <data name="DuplicateConversionUnit" xml:space="preserve">
    <value>001</value>
    <comment>Trùng đơn vị chuyển đổi</comment>
  </data>
  <data name="DuplicateMaterial" xml:space="preserve">
    <value>002</value>
    <comment>Trùng mã nguyên vật liệu</comment>
  </data>
  <data name="DuplicateMaterialCategory" xml:space="preserve">
    <value>003</value>
    <comment>Trùng mã nguyên vật liệu</comment>
  </data>
  <data name="DuplicateStock" xml:space="preserve">
    <value>004</value>
    <comment>Trùng mã kho ngầm định</comment>
  </data>
  <data name="DuplicateUnit" xml:space="preserve">
    <value>005</value>
    <comment>Trùng tên đơn vị tính</comment>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>500</value>
    <comment>Lỗi exception</comment>
  </data>
  <data name="FeatureNotEmpty" xml:space="preserve">
    <value>017</value>
    <comment>Tính chất không được bỏ trống</comment>
  </data>
  <data name="InvalidData" xml:space="preserve">
    <value>400</value>
    <comment>Dữ liệu không hợp lệ</comment>
  </data>
  <data name="MaterialCodeNotEmpty" xml:space="preserve">
    <value>015</value>
    <comment>Mã nguyên liệu không được bỏ trống</comment>
  </data>
  <data name="MaterialNameNotEmpty" xml:space="preserve">
    <value>016</value>
    <comment>Tên nguyên vật liệu không được bỏ trống</comment>
  </data>
  <data name="NoDefine" xml:space="preserve">
    <value>008</value>
    <comment>Lỗi không xác định</comment>
  </data>
  <data name="NotExistOrDeleted" xml:space="preserve">
    <value>009</value>
    <comment>Bản ghi đã bị xóa hoặc không tồn tại</comment>
  </data>
  <data name="StockCodeNotEmpty" xml:space="preserve">
    <value>011</value>
    <comment>Mã kho không được bỏ trống</comment>
  </data>
  <data name="StockNameNotEmpty" xml:space="preserve">
    <value>018</value>
    <comment>Tên kho không được bỏ trống</comment>
  </data>
  <data name="UnitNameNotEmpty" xml:space="preserve">
    <value>010</value>
    <comment>Tên đơn vị không được bỏ trông</comment>
  </data>
</root>